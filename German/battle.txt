changePokemonButton: "Pokémon wechseln",
    surrenderButton: "Aufgeben",
    wantToSurrender: "Willst du wirklich aufgeben? (Wenn du zu oft aufgibst kann dies zu einer Sperre führen!)",
    wantToSurrenderPrivate: "Willst du wirklich aufgeben?",
    searchBattle: "Kampf suchen",
    searchBattleRanked: "Ranked",
    searchBattleCasual: "Casual",
    searchTourneyBattle: (Enemy) => `Tunier Battle gegen ${Enemy}`,
    searchTourneyBattleNotReady: `Tourney Battle ist nicht bereit!`,
    searchBattleNotEnoguh: "Du benötigst 6 Pokémon in deinem Team!",

    wantToBattlePrivate: "Enter the same password as your opponent to start a private battle.",
    wantToBattleRanked: "Möchtest du einen Wettkampf starten?",
    rankedRequirements: "- Only one pokemon with more than 567 base stat total",
    waitForPlayer: "Warten auf anderen Spieler...",

    noTeam: "Kein Team vorhanden.",
    TeamFainted: "Suche fehlgeschlagen. Eins oder mehrere deiner Pokemon sind kampfunfähig.",
    bannedPokemonInTeam: "Suche fehlgeschlagen. Eins oder mehrere deiner Pokemon sind von der öffentlichen Suche ausgeschlossen",
    notEnoughPokemon: "Suche fehlgeschlagen. Du benötigst 6 Pokémon!",
    userBanned: "Du bist gebannt für:",
    removeFromTeam: "Aus Team entfernen",
    info: "Info",

    // battle
    battlePlayerNotAccepted: "Dein Gegner hat die Verbindung verloren, bevor der Kampf beginnen konnte.Bitte versuche es erneut.",
    battleCancelled: "Der Kampf wurde abgesagt.",
    battleAlreadyEnded: "Der Kampf ist bereits vorbei.",
    battleWaitForPlayer: "Warten auf anderen Spieler...",
    battleMoveUsed: (pokemonName, moveName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> setzt <span class="battle-log-movename" style="color:#ff6374">${moveName}</span> ein.`,
    battleMoveFailed: "Es ist fehlgeschlagen...",
    battleAttackMissed: (pokemonName) => `Der Angriff von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> hat verfehlt.`,
    battleNotEffective: "Das ist nicht sehr effektiv...",
    battleEffective: "Das ist sehr effektiv!",
    battleNoEffect: "Das hat keinen Effekt...",
    battleCriticalHit: "Ein Volltreffer!",
    battleNotAwaitingMove: "Angriff bereits gewählt.",
    battleMultipleHits: (amount) => `${amount} Treffer!`,
    battleStatUp1: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> steigt.`,
    battleStatUp2: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> steigt stark!`,
    battleStatUp3: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> steigt extrem!`,
    battleStatDown1: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> sinkt!`,
    battleStatDown2: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> sinkt stark!`,
    battleStatDown3: (pokemonName, statName) => `${statName} von <span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> sinkt fatal!`,

    // status effects
    battleEnemySleeping: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist eingeschlafen.`,
    battleEnemyParalysis: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde paralysiert.`,
    battleEnemyPoison: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde vergiftet.`,
    battleEnemyToxic: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde schwer vergiftet.`,
    battleEnemyBurned: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde verbrannt.`,
    battleIsParalyzed: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist paralysiert und kann sich nicht bewegen.`,
    battleEnemyConfused: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde verwirrt.`,
    battleEnemyEndConfusion: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist nicht mehr verwirrt.`,
    battleEnemyEndBurn: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist nicht mehr verbrannt.`,
    battleEnemyEndParalysis: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist nicht mehr paralysiert`,
    battleEnemyEndPoison: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist nicht mehr vergiftet`,
    battleEnemyFrozen: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wurde eingefroren.`,
    battleIsSleeping: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> schläft und konnte nicht angreifen.`,
    battleConfused: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> hat sich vor Verwirrung selbst verletzt.`,
    battleIsFrozen: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist eingefroren und kann sich nicht bewegen`,
    battleFlinched: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> schreckt zurück`,
    battleHealed: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> KP wurden aufgefrischt.`,
    battleWokeUp: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> ist aufgewacht.`,
    battleUnthawed: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> taut auf.`,
    battleRecoilApplied: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> erleidet Schaden durch den Rückstoß.`,
    battlePoisonDamage: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> erleidet Schaden durch die Vergiftung.`,
    battleBurnDamage: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> erleidet Schaden durch die Verbrennung.`,
    battlePokemonChanged: (LastPokemonName, CurrentPokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${LastPokemonName}</span> wurde mit <span class="battle-log-pokemonname" style="color:#63ff78">${CurrentPokemonName}</span> ausgewechselt.`,

    battleDisallowSwitching: (trainerName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${trainerName}</span> kann nicht mehr fliehen.`,
    battleAllowSwitching: (trainerName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${trainerName}</span> kann wieder ausgewechselt werden.`,

    battleEnemyStartMagnetRise: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> beginnt zu schweben.`,
    battleEnemyEndMagnetRise: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> hört auf zu schweben.`,

    battleEnemyStartTaunt: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> fällt auf den Verhöhner herein.`,
    battleEnemyEndTaunt: (pokemonName) => `<span class="battle-log-pokemonname" style="color:#63ff78">${pokemonName}</span> wird nicht mehr verhöhnt.`,

    // field effects
    battleRainEnd: `Der Regen lässt nach.`,
    battleRainStarted: `Es fängt an zu regnen.`,
    battleHailStarted: `Es fängt an zu hageln`,
    battleHailDamage: 'Pokémon nehmen Schaden durch den Hagel',
    battleHailEnd: 'Der Hagel lässt nach.',
    battleSandstormStarted: "Ein Sandsturm zieht auf.",
    battleSandstormDamage: "Pokémon nehmen Schaden durch den Sandsturm.",
    battleSandstormEnd: "Der Sandsturm löst sich auf.",
    battleSunStarted: `Die Sonne scheint stärker.`,
    battleSunEnd: `Das Sonnenlicht lässt nach.`,

    // user field effect
    battleMistStarted: "Deine Pokémon wurden von dichtem Nebel umhüllt.",
    battleMistPrevented: "Weißnebel verhindert, dass die Werte gesenkt werden.",
    battleMistEnd: "Der Nebel löst sich auf.",
    battleLightScreenStarted: "Ein Lichtschild beschützt das Team des Anwenders.",
    battleLightScreenEnd: "Der Lichtschild löst sich auf",
    battleReflectStarted: "Das Team des Anwenders wird von einem Reflektor geschützt.",
    battleReflectEnd: "Der Reflektor löst sich auf.",
    battleTailwindStarted: "Das Team des Anwenders bekommt Rückenwind.",
    battleTailwindEnd: "Der Rückenwind lässt nach.",
    battleTrickRoomStarted: "Die Dimensionen wurden verdreht.",
    battleTrickRoomEnd: "Die Dimensionen wurden wieder normal.",
    battleHazeUsed: "Der Dunkelnebel hebt alle Statusveränderungen auf.",

    // battle ended
    BattleWin: "Glückwunsch, du hast den Kampf gewonnen!",
    BattleLose: "Du hast den Kampf leider verloren!",
    BattleXP: (XP, DOLLAR) => `Jeder in deinem Team hat ${XP} EP erhalten! Du erhälst $${DOLLAR}!`,
    BattleNoXP: "Dein Team hat keine EP erhalten!",

    struggle: "Verzweifler",

    battleDoesntExist: "Das Battle existiert nicht!",
    enterSpectateKey: "Zuschauerschlüssel:",

    tooManyConcurrentBattles: "Zur Zeit laufen zu viele Battles gleichzeitig! Bitte versuche es in 5 Minuten erneut!"